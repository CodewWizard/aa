// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render given schema correctly 1`] = `
<div
  className="row"
>
  <div
    aria-label="locationTable"
    className="col-md-12"
    id="#/properties/addressautocomplete"
    name="locationTable"
    role="datatable"
  >
    <div
      className=" css-2b097c-container"
      onKeyDown={[Function]}
    >
      <span
        aria-atomic="false"
        aria-live="polite"
        aria-relevant="additions text"
        className="css-1f43avz-a11yText-A11yText"
      />
      <div
        className=" css-yk16xz-control"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className=" css-g1d714-ValueContainer"
        >
          <div
            className=" css-1wa3eu0-placeholder"
          >
            Select...
          </div>
          <div
            className="css-b8ldur-Input"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                disabled={false}
                id="react-select-2-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "label": "input",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              />
            </div>
          </div>
        </div>
        <div
          className=" css-1hb7zxy-IndicatorsContainer"
        >
          <span
            className=" css-1okebmr-indicatorSeparator"
          />
          <div
            aria-hidden="true"
            className=" css-tlfecz-indicatorContainer"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-tj5bde-Svg"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="form"
  >
    <form
      className="dynamic-form"
      id="manualAddressForm"
      onSubmit={[Function]}
    >
      <div
        className="formBox formBoxHgtclearfix"
      >
        <div
          className="d-flex justify-content-between"
        />
        <div
          className="mt-4"
        >
          <div
            className="row align-items-center"
          >
            <div
              className="col-xl-3 col-md-3 mb-4 align-self-end"
            >
              <div>
                <label
                  className="inputLabel primaryColor4 p-0"
                  htmlFor="streetAddress"
                >
                  AddressLine 1*
                     
                </label>
              </div>
              <input
                class="inputText"
                disabled=""
                id="streetAddress"
                maxlength="50"
                minlength="0"
                onBlur={[Function]}
                onChange={[Function]}
                onInvalid={[Function]}
                placeholder="AddressLine 1"
                readOnly=""
                required={true}
                type="text"
                value=""
              />
            </div>
            <div
              className="col-xl-3 col-md-3 mb-4 align-self-end"
            >
              <div>
                <label
                  className="inputLabel primaryColor4 p-0"
                  htmlFor="addressline2"
                >
                  AddressLine 2
                     
                </label>
              </div>
              <input
                class="inputText"
                disabled=""
                id="addressline2"
                maxlength="50"
                minlength="0"
                onBlur={[Function]}
                onChange={[Function]}
                onInvalid={[Function]}
                placeholder="AddressLine 2"
                readOnly=""
                required={false}
                type="text"
                value=""
              />
            </div>
            <div
              className="col-xl-3 col-md-3 mb-4 align-self-end"
            >
              <div>
                <label
                  className="inputLabel primaryColor4 p-0"
                  htmlFor="city"
                >
                  City*
                     
                </label>
              </div>
              <input
                class="inputText"
                disabled=""
                id="city"
                maxlength="50"
                minlength="2"
                onBlur={[Function]}
                onChange={[Function]}
                onInvalid={[Function]}
                placeholder="City"
                readOnly=""
                required={true}
                type="text"
                value=""
              />
            </div>
            <div
              className="col-xl-3 col-md-3 mb-4 align-self-end"
            >
              <div>
                <label
                  className="inputLabel primaryColor4 p-0"
                  htmlFor="state"
                >
                  State*
                     
                </label>
              </div>
              <input
                class="inputText"
                disabled=""
                id="state"
                maxlength="50"
                minlength="2"
                onBlur={[Function]}
                onChange={[Function]}
                onInvalid={[Function]}
                placeholder="State"
                readOnly=""
                required={true}
                type="text"
                value=""
              />
            </div>
            <div
              className="col-xl-3 col-md-3 mb-4 align-self-end"
            >
              <div>
                <label
                  className="inputLabel primaryColor4 p-0"
                  htmlFor="zip"
                >
                  Zip*
                     
                </label>
              </div>
              <input
                class="inputText"
                disabled=""
                id="zip"
                maxlength="6"
                minlength="2"
                onBlur={[Function]}
                onChange={[Function]}
                onInvalid={[Function]}
                placeholder="Zip"
                readOnly=""
                required={true}
                type="text"
                value=""
              />
            </div>
            <div
              className="col-xl-3 col-md-3 mb-4 align-self-end"
            >
              <div>
                <label
                  className="inputLabel primaryColor4 p-0"
                  htmlFor="country"
                >
                  Country*
                     
                </label>
              </div>
              <input
                class="inputText"
                disabled=""
                id="country"
                maxlength="50"
                minlength="2"
                onBlur={[Function]}
                onChange={[Function]}
                onInvalid={[Function]}
                placeholder="Country"
                readOnly=""
                required={true}
                type="text"
                value=""
              />
            </div>
            <div
              className="col-xxxl-3 col-xxl-4 col-lg-6 mb-4 align-self-end"
            >
              <div>
                <label
                  className="inputLabel primaryColor4 p-0"
                  htmlFor="addresstype"
                >
                  Address Types*
                     
                </label>
              </div>
              <div
                className="custSelect position-relative"
              >
                <div
                  className=" css-b62m3t-container"
                  onKeyDown={[Function]}
                >
                  <span
                    className="css-1f43avz-a11yText-A11yText"
                    id="react-select-2-live-region"
                  />
                  <span
                    aria-atomic="false"
                    aria-live="polite"
                    aria-relevant="additions text"
                    className="css-1f43avz-a11yText-A11yText"
                  />
                  <div
                    className=" css-1im77uy-control"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                  >
                    <div
                      className=" css-1fdsijx-ValueContainer"
                    >
                      <div
                        className=" css-1jqq78o-placeholder"
                        id="react-select-2-placeholder"
                      >
                        Select...
                      </div>
                      <div
                        className=" css-qbdosj-Input"
                        data-value=""
                      >
                        <input
                          aria-autocomplete="list"
                          aria-describedby="react-select-2-placeholder"
                          aria-expanded={false}
                          aria-haspopup={true}
                          aria-required={true}
                          autoCapitalize="none"
                          autoComplete="off"
                          autoCorrect="off"
                          className=""
                          disabled=""
                          id="react-select-2-input"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          role="combobox"
                          spellCheck="false"
                          style={
                            Object {
                              "background": 0,
                              "border": 0,
                              "color": "inherit",
                              "font": "inherit",
                              "gridArea": "1 / 2",
                              "label": "input",
                              "margin": 0,
                              "minWidth": "2px",
                              "opacity": 1,
                              "outline": 0,
                              "padding": 0,
                              "width": "100%",
                            }
                          }
                          tabIndex={0}
                          type="text"
                          value=""
                        />
                      </div>
                    </div>
                    <div
                      className=" css-1hb7zxy-IndicatorsContainer"
                    >
                      <span
                        className=" css-1u9des2-indicatorSeparator"
                      />
                      <div
                        aria-hidden="true"
                        className=" css-1xc3v61-indicatorContainer"
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                      >
                        <svg
                          aria-hidden="true"
                          className="css-tj5bde-Svg"
                          focusable="false"
                          height={20}
                          viewBox="0 0 20 20"
                          width={20}
                        >
                          <path
                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                  <input
                    aria-hidden="true"
                    className="css-5kkxb2-requiredInput-RequiredInput"
                    onChange={[Function]}
                    onFocus={[Function]}
                    required={true}
                    tabIndex={-1}
                    value=""
                  />
                </div>
                <input
                  onInvalid={[Function]}
                  required={true}
                  style={
                    Object {
                      "height": "0px",
                      "position": "absolute",
                      "width": "0px",
                    }
                  }
                  type="text"
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </form>
  </div>
  <div
    className="d-flex justify-content-between align-items-center"
    id="#/properties/unformattedDisplay"
  >
    <div
      className="col-md-10 col-sm-10"
    >
      <label
        htmlFor="addressDisplay"
      >
        Full Address
      </label>
      <input
        className="inputText col-xl-12 col-md-12 mb-4 align-self-end"
        id="addressDisplay"
        readOnly={true}
        type="text"
        value=""
      />
    </div>
    <button
      className="btn btnStyle btnPrim"
      onClick={[Function]}
      type="button"
    >
      SAVE
    </button>
  </div>
</div>
`;
